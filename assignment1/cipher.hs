-- Euan Rochester

import Data.List
import Data.Maybe
import Data.Tuple
import Data.Char
--the fromMaybe in the std libs is *far* more useful
import AssignmentHelp hiding (fromMaybe)

data Cipher = Cipher String deriving Show

-- the set of letter's the cipher can/must include
alphabet = ['A'..'Z']

validateCipher :: Cipher -> Bool
validateCipher (Cipher cipher) = sort cipher == alphabet

-- shift list left by n elements
rotate :: [a] -> Int -> [a] 
rotate list n | (length list) < n = rotate list (mod n (length list))
              | otherwise = (drop n list)++(take n list)

encode :: Char -> Cipher -> Int -> Maybe Char
encode plain (Cipher cipher) offset = fmap (rotate cipher offset !!) (elemIndex plain alphabet)

encodeMessage :: String -> Cipher -> Int -> [Char]
encodeMessage plainText cipher offset = catMaybes (fmap (\x -> encode x cipher offset) plainText)

reverseEncode :: Char -> Cipher -> Int -> Maybe Char
reverseEncode ciphText (Cipher cipher) offset = fmap (alphabet !!) (elemIndex ciphText (rotate cipher offset)) 

reverseEncodeMessage :: String -> Cipher -> Int -> [Char]
reverseEncodeMessage ciphText cipher offset = catMaybes (fmap (\x -> reverseEncode x cipher offset) ciphText)

sortBySnd :: Ord a => [(b,a)] -> [(b,a)]
sortBySnd = sortBy (\(_,x) -> \(_,y) -> compare y x)

sortByFst :: Ord b => [(b,a)] -> [(b,a)]
sortByFst = sortBy (\(x,_) -> \(y,_) -> compare y x)


textPct :: Char -> [Char] -> Float
textPct char text = 
        let count = (length (elemIndices char text))
        in (fromIntegral count)*100.0/(fromIntegral(length text))

letterStats ciphText = sortBySnd (filter ((>0) . snd) (fmap (\x -> (x,textPct x ciphText))  alphabet))

--guesses is a list of tuples of of (ciphertextChar,plaintextChar)
partialDecode guesses ciphText =
        fmap (\x -> fromMaybe x (lookup x guesses) ) ciphText

--helper functions for decoding in ghci
guessesToCipher :: [(Char,Char)] -> String
guessesToCipher guesses = fmap (fromMaybe '?')
        (fmap (\x -> lookup x (fmap (\(a,b) -> (toUpper b, a)) (sortByFst guesses))) alphabet)


replaceGuess list (a,b) = (a,b):(filter (\(x,y) -> a /= x && b /= y) list)

replaceManyGuesses replacements list = foldl replaceGuess list replacements

--best set of starting guesses for use in ghci
guessesFromStats ciphText = zip (fmap fst (letterStats ciphText)) (fmap fst engFreq)

guessesHelper replacements =
        let initialGuesses = guessesFromStats mystery
            guesses = replaceManyGuesses replacements initialGuesses
        in print mystery >> print (partialDecode guesses mystery) >> print alphabet >> print (guessesToCipher guesses)
        
        
-- ##Test results:
--
-- # testing validateCipher
-- ```
-- *Main> validateCipher (Cipher "ASDJKE")
-- False
-- *Main> validateCipher (Cipher "ABCDEFGHIJKLMNOPQRSTUVWXYZ")
-- True
-- *Main> validateCipher (Cipher "ASDJKEBCFGHILMNOPQRTUVWXYZ")
-- True
-- ```
-- 
-- #testing reverseEncode
-- 
-- ```
-- *Main> reverseEncodeMessage "SHEWDTLS" (Cipher "EKMFLGDQVZNTOWYHXUSPAIBRCJ") 0
-- "SPANGLES"
-- *Main> reverseEncodeMessage (encodeMessage "TESTMESSAGE" ciph 0) ciph 0
-- "TESTMESSAGE"
-- ```
-- 
-- #testing letterStats
-- 
-- ```
-- *Main> letterStats "STDDWSD"
-- [('D',42.857143),('S',28.571428),('T',14.285714),('W',14.285714)]
-- ```
-- 
-- #testing partialDecode / decrypting message
-- 
-- ```
-- *Main> guessesHelper []
-- "QJAWXARJFBEWXZXADBAJQJDJQFYLQVCWEVEFKQHWHRFDCXKWXNFYMWYFDMCPWAAXMWAJFVNWJAPXZWJCQAFYWXNQJJNWBQJNFYMWEAJFVFZQJACFDNHBWJCWEQMCJAFEJFTAQUWYFSAJFVPXRBWYFJNWJAQYLEWXAWJCWPWAAXMWNWYMJCXBQJPFEWAJFV"
-- "cnbapbinoseapvpbtsbncntncoqwcgdaegeojcuauiotdpjaproqfaqotfdhabbpfabnogranbhpvandcboqaprcnnrascnroqfaebnogovcnbdotrusandaecfdnboenoxbclaqokbnoghpisaqonranbcqweapbandahabbpfaraqfndpscnhoeabnog"
-- "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
-- "WAQCEMVPRKSU?JFXYNBDHZLT??"
-- *Main> guessesHelper [('Q','I')]
-- "QJAWXARJFBEWXZXADBAJQJDJQFYLQVCWEVEFKQHWHRFDCXKWXNFYMWYFDMCPWAAXMWAJFVNWJAPXZWJCQAFYWXNQJJNWBQJNFYMWEAJFVFZQJACFDNHBWJCWEQMCJAFEJFTAQUWYFSAJFVPXRBWYFJNWJAQYLEWXAWJCWPWAAXMWNWYMJCXBQJPFEWAJFV"
-- "InbapbinoseapvpbtsbnIntnIoqwIgdaegeojIuauiotdpjaproqfaqotfdhabbpfabnogranbhpvandIboqaprInnrasInroqfaebnogovInbdotrusandaeIfdnboenoxbIlaqokbnoghpisaqonranbIqweapbandahabbpfaraqfndpsInhoeabnog"
-- "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
-- "WA?CEMVPRKSU?JFXYNBDHZLT??"
-- *Main> guessesHelper [('Q','I'),('J','T'),('A','S')]
-- "QJAWXARJFBEWXZXADBAJQJDJQFYLQVCWEVEFKQHWHRFDCXKWXNFYMWYFDMCPWAAXMWAJFVNWJAPXZWJCQAFYWXNQJJNWBQJNFYMWEAJFVFZQJACFDNHBWJCWEQMCJAFEJFTAQUWYFSAJFVPXRBWYFJNWJAQYLEWXAWJCWPWAAXMWNWYMJCXBQJPFEWAJFV"
-- "ITSapSiToseapvpStsSTITtTIoqwIgdaegeojIuauiotdpjaproqfaqotfdhaSSpfaSTograTShpvaTdISoqaprITTrasITroqfaeSTogovITSdotrusaTdaeIfdTSoeToxSIlaqokSToghpisaqoTraTSIqweapSaTdahaSSpfaraqfTdpsIThoeaSTog"
-- "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
-- "W??CEMVPRKSU??FXYNBJHZLT??"
-- *Main> guessesHelper [('Q','I'),('J','T'),('A','S'),('W','E'),('X','A')]
-- "QJAWXARJFBEWXZXADBAJQJDJQFYLQVCWEVEFKQHWHRFDCXKWXNFYMWYFDMCPWAAXMWAJFVNWJAPXZWJCQAFYWXNQJJNWBQJNFYMWEAJFVFZQJACFDNHBWJCWEQMCJAFEJFTAQUWYFSAJFVPXRBWYFJNWJAQYLEWXAWJCWPWAAXMWNWYMJCXBQJPFEWAJFV"
-- "ITSEASiToseEAvAStsSTITtTIoqwIgdEegeojIuEuiotdAjEAroqfEqotfdhESSAfESTogrETShAvETdISoqEArITTrEsITroqfEeSTogovITSdotrusETdEeIfdTSoeToxSIlEqokSToghAisEqoTrETSIqweEASETdEhESSAfErEqfTdAsIThoeESTog"
-- "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
-- "X??CWMVPRKSU??F?YNBJHZLT??"
-- *Main> guessesHelper [('Q','I'),('J','T'),('A','S'),('W','E'),('X','A'),('I','Y')]
-- "QJAWXARJFBEWXZXADBAJQJDJQFYLQVCWEVEFKQHWHRFDCXKWXNFYMWYFDMCPWAAXMWAJFVNWJAPXZWJCQAFYWXNQJJNWBQJNFYMWEAJFVFZQJACFDNHBWJCWEQMCJAFEJFTAQUWYFSAJFVPXRBWYFJNWJAQYLEWXAWJCWPWAAXMWNWYMJCXBQJPFEWAJFV"
-- "ITSEASiToseEAvAStsSTITtTIoqwIgdEegeojIuEuiotdAjEAroqfEqotfdhESSAfESTogrETShAvETdISoqEArITTrEsITroqfEeSTogovITSdotrusETdEeIfdTSoeToxSIlEqokSToghAisEqoTrETSIqweEASETdEhESSAfErEqfTdAsIThoeESTog"
-- "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
-- "X??CWMVPRKSU??F?YNBJHZLTI?"
-- *Main> guessesHelper [('Q','I'),('J','T'),('A','S'),('W','E'),('X','A'),('R','Y')]
-- "QJAWXARJFBEWXZXADBAJQJDJQFYLQVCWEVEFKQHWHRFDCXKWXNFYMWYFDMCPWAAXMWAJFVNWJAPXZWJCQAFYWXNQJJNWBQJNFYMWEAJFVFZQJACFDNHBWJCWEQMCJAFEJFTAQUWYFSAJFVPXRBWYFJNWJAQYLEWXAWJCWPWAAXMWNWYMJCXBQJPFEWAJFV"
-- "ITSEASYToseEAvAStsSTITtTIoqwIgdEegeojIuEuYotdAjEAroqfEqotfdhESSAfESTogrETShAvETdISoqEArITTrEsITroqfEeSTogovITSdotrusETdEeIfdTSoeToxSIlEqokSToghAYsEqoTrETSIqweEASETdEhESSAfErEqfTdAsIThoeESTog"
-- "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
-- "X??CWMVPQKSU??F?YNBJHZLTR?"
-- *Main> guessesHelper [('Q','I'),('J','T'),('A','S'),('W','E'),('X','A'),('R','Y'),('F','O')]
-- "QJAWXARJFBEWXZXADBAJQJDJQFYLQVCWEVEFKQHWHRFDCXKWXNFYMWYFDMCPWAAXMWAJFVNWJAPXZWJCQAFYWXNQJJNWBQJNFYMWEAJFVFZQJACFDNHBWJCWEQMCJAFEJFTAQUWYFSAJFVPXRBWYFJNWJAQYLEWXAWJCWPWAAXMWNWYMJCXBQJPFEWAJFV"
-- "ITSEASYTOseEAvAStsSTITtTIOqwIgdEegeOjIuEuYOtdAjEArOqfEqOtfdhESSAfESTOgrETShAvETdISOqEArITTrEsITrOqfEeSTOgOvITSdOtrusETdEeIfdTSOeTOxSIlEqOkSTOghAYsEqOTrETSIqweEASETdEhESSAfErEqfTdAsIThOeESTOg"
-- "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
-- "X??CWMVPQKSU??F?YNBJHZLTR?"
-- *Main> guessesHelper [('Q','I'),('J','T'),('A','S'),('W','E'),('X','A'),('R','Y'),('F','O'),('B','B'),('E','R')]
-- "QJAWXARJFBEWXZXADBAJQJDJQFYLQVCWEVEFKQHWHRFDCXKWXNFYMWYFDMCPWAAXMWAJFVNWJAPXZWJCQAFYWXNQJJNWBQJNFYMWEAJFVFZQJACFDNHBWJCWEQMCJAFEJFTAQUWYFSAJFVPXRBWYFJNWJAQYLEWXAWJCWPWAAXMWNWYMJCXBQJPFEWAJFV"
-- "ITSEASYTOBREAvAStBSTITtTIOqwIgdERgROjIuEuYOtdAjEArOqfEqOtfdhESSAfESTOgrETShAvETdISOqEArITTrEBITrOqfERSTOgOvITSdOtruBETdERIfdTSORTOxSIlEqOkSTOghAYBEqOTrETSIqwREASETdEhESSAfErEqfTdABIThORESTOg"
-- "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
-- "XB?CWMVPQKSU??F?YNAJHZLTR?"
-- *Main> guessesHelper [('Q','I'),('J','T'),('A','S'),('W','E'),('X','A'),('R','Y'),('F','O'),('B','B'),('E','R'),('Z','K')]
-- "QJAWXARJFBEWXZXADBAJQJDJQFYLQVCWEVEFKQHWHRFDCXKWXNFYMWYFDMCPWAAXMWAJFVNWJAPXZWJCQAFYWXNQJJNWBQJNFYMWEAJFVFZQJACFDNHBWJCWEQMCJAFEJFTAQUWYFSAJFVPXRBWYFJNWJAQYLEWXAWJCWPWAAXMWNWYMJCXBQJPFEWAJFV"
-- "ITSEASYTOBREAKAStBSTITtTIOqwIgdERgROjIuEuYOtdAjEArOqfEqOtfdhESSAfESTOgrETShAKETdISOqEArITTrEBITrOqfERSTOgOKITSdOtruBETdERIfdTSORTOxSIlEqOkSTOghAYBEqOTrETSIqwREASETdEhESSAfErEqfTdABIThORESTOg"
-- "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
-- "XB?CWMVPQKZU??F?YNAJH?LTR?"
-- *Main> guessesHelper [('Q','I'),('J','T'),('A','S'),('W','E'),('X','A'),('R','Y'),('F','O'),('B','B'),('E','R'),('Z','K'),('D','U')]
-- "QJAWXARJFBEWXZXADBAJQJDJQFYLQVCWEVEFKQHWHRFDCXKWXNFYMWYFDMCPWAAXMWAJFVNWJAPXZWJCQAFYWXNQJJNWBQJNFYMWEAJFVFZQJACFDNHBWJCWEQMCJAFEJFTAQUWYFSAJFVPXRBWYFJNWJAQYLEWXAWJCWPWAAXMWNWYMJCXBQJPFEWAJFV"
-- "ITSEASYTOBREAKASUBSTITUTIOqwIgdERgROjIuEuYOUdAjEArOqfEqOUfdhESSAfESTOgrETShAKETdISOqEArITTrEBITrOqfERSTOgOKITSdOUruBETdERIfdTSORTOxSIlEqOkSTOghAYBEqOTrETSIqwREASETdEhESSAfErEqfTdABIThORESTOg"
-- "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
-- "XB?CWMVPQKZU??F?YNAJH?LTR?"
-- *Main> guessesHelper [('Q','I'),('J','T'),('A','S'),('W','E'),('X','A'),('R','Y'),('F','O'),('B','B'),('E','R'),('Z','K'),('D','U'),('Y','N')]
-- "QJAWXARJFBEWXZXADBAJQJDJQFYLQVCWEVEFKQHWHRFDCXKWXNFYMWYFDMCPWAAXMWAJFVNWJAPXZWJCQAFYWXNQJJNWBQJNFYMWEAJFVFZQJACFDNHBWJCWEQMCJAFEJFTAQUWYFSAJFVPXRBWYFJNWJAQYLEWXAWJCWPWAAXMWNWYMJCXBQJPFEWAJFV"
-- "ITSEASYTOBREAKASUBSTITUTIONwIgdERgROjIuEuYOUdAjEArONfENOUfdhESSAfESTOgrETShAKETdISONEArITTrEBITrONfERSTOgOKITSdOUruBETdERIfdTSORTOxSIlENOkSTOghAYBENOTrETSINwREASETdEhESSAfErENfTdABIThORESTOg"
-- "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
-- "XB?CWMVPQKZU?YF??NAJH?LTR?"
-- *Main> guessesHelper [('Q','I'),('J','T'),('A','S'),('W','E'),('X','A'),('R','Y'),('F','O'),('B','B'),('E','R'),('Z','K'),('D','U'),('Y','N'),('L','C'),('V','P'),('C','H')]
-- "QJAWXARJFBEWXZXADBAJQJDJQFYLQVCWEVEFKQHWHRFDCXKWXNFYMWYFDMCPWAAXMWAJFVNWJAPXZWJCQAFYWXNQJJNWBQJNFYMWEAJFVFZQJACFDNHBWJCWEQMCJAFEJFTAQUWYFSAJFVPXRBWYFJNWJAQYLEWXAWJCWPWAAXMWNWYMJCXBQJPFEWAJFV"
-- "ITSEASYTOBREAKASUBSTITUTIONCIPHERPROjIuEuYOUHAjEArONfENOUfHhESSAfESTOPrETShAKETHISONEArITTrEBITrONfERSTOPOKITSHOUruBETHERIfHTSORTOxSIlENOkSTOPhAYBENOTrETSINCREASETHEhESSAfErENfTHABIThORESTOP"
-- "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
-- "XBL?WM?PQKZU?YFV?NAJH??TR?"
-- *Main> guessesHelper [('Q','I'),('J','T'),('A','S'),('W','E'),('X','A'),('R','Y'),('F','O'),('B','B'),('E','R'),('Z','K'),('D','U'),('Y','N'),('L','C'),('V','P'),('C','H'),('K','V')]
-- "QJAWXARJFBEWXZXADBAJQJDJQFYLQVCWEVEFKQHWHRFDCXKWXNFYMWYFDMCPWAAXMWAJFVNWJAPXZWJCQAFYWXNQJJNWBQJNFYMWEAJFVFZQJACFDNHBWJCWEQMCJAFEJFTAQUWYFSAJFVPXRBWYFJNWJAQYLEWXAWJCWPWAAXMWNWYMJCXBQJPFEWAJFV"
-- "ITSEASYTOBREAKASUBSTITUTIONCIPHERPROVIuEuYOUHAVEArONfENOUfHhESSAfESTOPrETShAKETHISONEArITTrEBITrONfERSTOPOKITSHOUruBETHERIfHTSORTOxSIlENOkSTOPhAYBENOTrETSINCREASETHEhESSAfErENfTHABIThORESTOP"
-- "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
-- "XBL?WM?PQ?ZU?YFV?NAJHK?TR?"
-- *Main> guessesHelper [('Q','I'),('J','T'),('A','S'),('W','E'),('X','A'),('R','Y'),('F','O'),('B','B'),('E','R'),('Z','K'),('D','U'),('Y','N'),('L','C'),('V','P'),('C','H'),('K','V'),('H','D')]
-- "QJAWXARJFBEWXZXADBAJQJDJQFYLQVCWEVEFKQHWHRFDCXKWXNFYMWYFDMCPWAAXMWAJFVNWJAPXZWJCQAFYWXNQJJNWBQJNFYMWEAJFVFZQJACFDNHBWJCWEQMCJAFEJFTAQUWYFSAJFVPXRBWYFJNWJAQYLEWXAWJCWPWAAXMWNWYMJCXBQJPFEWAJFV"
-- "ITSEASYTOBREAKASUBSTITUTIONCIPHERPROVIDEDYOUHAVEArONfENOUfHhESSAfESTOPrETShAKETHISONEArITTrEBITrONfERSTOPOKITSHOUrDBETHERIfHTSORTOxSIlENOkSTOPhAYBENOTrETSINCREASETHEhESSAfErENfTHABIThORESTOP"
-- "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
-- "XBLHWM?PQ?ZU?YFV?NAJDK?TR?"
-- *Main> guessesHelper [('Q','I'),('J','T'),('A','S'),('W','E'),('X','A'),('R','Y'),('F','O'),('B','B'),('E','R'),('Z','K'),('D','U'),('Y','N'),('L','C'),('V','P'),('C','H'),('K','V'),('H','D'),('N','L'),('M','G')]
-- "QJAWXARJFBEWXZXADBAJQJDJQFYLQVCWEVEFKQHWHRFDCXKWXNFYMWYFDMCPWAAXMWAJFVNWJAPXZWJCQAFYWXNQJJNWBQJNFYMWEAJFVFZQJACFDNHBWJCWEQMCJAFEJFTAQUWYFSAJFVPXRBWYFJNWJAQYLEWXAWJCWPWAAXMWNWYMJCXBQJPFEWAJFV"
-- "ITSEASYTOBREAKASUBSTITUTIONCIPHERPROVIDEDYOUHAVEALONGENOUGHhESSAGESTOPLETShAKETHISONEALITTLEBITLONGERSTOPOKITSHOULDBETHERIGHTSORTOxSIlENOkSTOPhAYBENOTLETSINCREASETHEhESSAGELENGTHABIThORESTOP"
-- "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
-- "XBLHW?MPQ?ZU?YFV?EAJDK?TR?"
-- *Main> guessesHelper [('Q','I'),('J','T'),('A','S'),('W','E'),('X','A'),('R','Y'),('F','O'),('B','B'),('E','R'),('Z','K'),('D','U'),('Y','N'),('L','C'),('V','P'),('C','H'),('K','V'),('H','D'),('N','L'),('M','G'),('P','M')]
-- "QJAWXARJFBEWXZXADBAJQJDJQFYLQVCWEVEFKQHWHRFDCXKWXNFYMWYFDMCPWAAXMWAJFVNWJAPXZWJCQAFYWXNQJJNWBQJNFYMWEAJFVFZQJACFDNHBWJCWEQMCJAFEJFTAQUWYFSAJFVPXRBWYFJNWJAQYLEWXAWJCWPWAAXMWNWYMJCXBQJPFEWAJFV"
-- "ITSEASYTOBREAKASUBSTITUTIONCIPHERPROVIDEDYOUHAVEALONGENOUGHMESSAGESTOPLETSMAKETHISONEALITTLEBITLONGERSTOPOKITSHOULDBETHERIGHTSORTOxSIlENOkSTOPMAYBENOTLETSINCREASETHEMESSAGELENGTHABITMORESTOP"
-- "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
-- "XBLHW?MCQ?ZUPYFV?EAJDK?TR?"
-- *Main> guessesHelper [('Q','I'),('J','T'),('A','S'),('W','E'),('X','A'),('R','Y'),('F','O'),('B','B'),('E','R'),('Z','K'),('D','U'),('Y','N'),('L','C'),('V','P'),('C','H'),('K','V'),('H','D'),('N','L'),('M','G'),('P','M'),('T','F'),('U','S')]
-- "QJAWXARJFBEWXZXADBAJQJDJQFYLQVCWEVEFKQHWHRFDCXKWXNFYMWYFDMCPWAAXMWAJFVNWJAPXZWJCQAFYWXNQJJNWBQJNFYMWEAJFVFZQJACFDNHBWJCWEQMCJAFEJFTAQUWYFSAJFVPXRBWYFJNWJAQYLEWXAWJCWPWAAXMWNWYMJCXBQJPFEWAJFV"
-- "ITAEAAYTOBREAKAAUBATITUTIONCIPHERPROVIDEDYOUHAVEALONGENOUGHMEAAAGEATOPLETAMAKETHIAONEALITTLEBITLONGERATOPOKITAHOULDBETHERIGHTAORTOFAISENOkATOPMAYBENOTLETAINCREAAETHEMEAAAGELENGTHABITMOREATOP"
-- "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
-- "XBLHWTMCQ?ZNPYFV?EUJDK??R?"
-- *Main> guessesHelper [('Q','I'),('J','T'),('A','S'),('W','E'),('X','A'),('R','Y'),('F','O'),('B','B'),('E','R'),('Z','K'),('D','U'),('Y','N'),('L','C'),('V','P'),('C','H'),('K','V'),('H','D'),('N','L'),('M','G'),('P','M'),('T','F'),('U','S'),('A','S')]
-- "QJAWXARJFBEWXZXADBAJQJDJQFYLQVCWEVEFKQHWHRFDCXKWXNFYMWYFDMCPWAAXMWAJFVNWJAPXZWJCQAFYWXNQJJNWBQJNFYMWEAJFVFZQJACFDNHBWJCWEQMCJAFEJFTAQUWYFSAJFVPXRBWYFJNWJAQYLEWXAWJCWPWAAXMWNWYMJCXBQJPFEWAJFV"
-- "ITSEASYTOBREAKASUBSTITUTIONCIPHERPROVIDEDYOUHAVEALONGENOUGHMESSAGESTOPLETSMAKETHISONEALITTLEBITLONGERSTOPOKITSHOULDBETHERIGHTSORTOFSIUENOkSTOPMAYBENOTLETSINCREASETHEMESSAGELENGTHABITMORESTOP"
-- "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
-- "XBLHWTMCQ?ZNPYFV?EAJDK??R?"
-- *Main> guessesHelper [('Q','I'),('J','T'),('A','S'),('W','E'),('X','A'),('R','Y'),('F','O'),('B','B'),('E','R'),('Z','K'),('D','U'),('Y','N'),('L','C'),('V','P'),('C','H'),('K','V'),('H','D'),('N','L'),('M','G'),('P','M'),('T','F'),('U','S'),('A','S'),('U','Z')]
-- "QJAWXARJFBEWXZXADBAJQJDJQFYLQVCWEVEFKQHWHRFDCXKWXNFYMWYFDMCPWAAXMWAJFVNWJAPXZWJCQAFYWXNQJJNWBQJNFYMWEAJFVFZQJACFDNHBWJCWEQMCJAFEJFTAQUWYFSAJFVPXRBWYFJNWJAQYLEWXAWJCWPWAAXMWNWYMJCXBQJPFEWAJFV"
-- "ITSEASYTOBREAKASUBSTITUTIONCIPHERPROVIDEDYOUHAVEALONGENOUGHMESSAGESTOPLETSMAKETHISONEALITTLEBITLONGERSTOPOKITSHOULDBETHERIGHTSORTOFSIZENOkSTOPMAYBENOTLETSINCREASETHEMESSAGELENGTHABITMORESTOP"
-- "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
-- "XBLHWTMCQ?ZNPYFV?EAJDK??RU"
-- *Main> guessesHelper [('Q','I'),('J','T'),('A','S'),('W','E'),('X','A'),('R','Y'),('F','O'),('B','B'),('E','R'),('Z','K'),('D','U'),('Y','N'),('L','C'),('V','P'),('C','H'),('K','V'),('H','D'),('N','L'),('M','G'),('P','M'),('T','F'),('U','S'),('A','S'),('U','Z'),('S','W')]
-- "QJAWXARJFBEWXZXADBAJQJDJQFYLQVCWEVEFKQHWHRFDCXKWXNFYMWYFDMCPWAAXMWAJFVNWJAPXZWJCQAFYWXNQJJNWBQJNFYMWEAJFVFZQJACFDNHBWJCWEQMCJAFEJFTAQUWYFSAJFVPXRBWYFJNWJAQYLEWXAWJCWPWAAXMWNWYMJCXBQJPFEWAJFV"
-- "ITSEASYTOBREAKASUBSTITUTIONCIPHERPROVIDEDYOUHAVEALONGENOUGHMESSAGESTOPLETSMAKETHISONEALITTLEBITLONGERSTOPOKITSHOULDBETHERIGHTSORTOFSIZENOWSTOPMAYBENOTLETSINCREASETHEMESSAGELENGTHABITMORESTOP"
-- "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
-- "XBLHWTMCQ?ZNPYFV?EAJDKS?RU"
-- *Main>
-- ```


